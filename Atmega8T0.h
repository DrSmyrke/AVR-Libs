#include <avr/interrupt.h>
#include <avr/io.h>
/*
Timer0 — 8битный таймер.
В ATMega8 и ему подобных, timer0 ну очень простой таймер. Он умеет только считать, только от 0, и только до 255. Считает он с заданной частотой, и это пожалуй единственная настройка, которую можно настроить. Хотя и тут выбор не так велик, как хотелось бы.
Счетный регистр TCNT0 (8-и разрядный, как не сложно догадаться), доступен на чтение и запись, при переполнении (когда значение меняется с 0xFF на 0x00) дергается прерывание по-вектору TIMER0_OVF (если конечно разрешено битом TOIE0 в регистре TIMSK и глобально включено командой sei).
Параметры таймера задаются регистром TCCR0 , точнее первыми 3-мя битам (Clock Select) этого регистра: CS00,CS01,CS02 – выбор тактового источника
CS02 	CS01 	CS00 	 
0 	0 	0 	нет источника, таймер остановлен
0 	0 	1 	без предделителя, на вход таймера подается тактовая частота
0 	1 	0 	F_CPU/8 (предделитель/prescaler)
0 	1 	1 	F_CPU/64 (предделитель/prescaler)
1 	0 	0 	F_CPU/256 (предделитель/prescaler)
1 	0 	1 	F_CPU/1024 (предделитель/prescaler)
1 	1 	0 	внешний источник, по фронту
1 	1 	1 	внешний источник, по спаду
Для работы необходим разрешить соответствующее прерывание в регистре TIMSK установкой бита TOIE0

Сброс предделителя можно осуществить установив соответствующий бит (для ATMega8 это PSR10) регистра SFIOR.

В ATmega8 для timer0 и timer1 регистр предделителя общий, и надо внимательно относиться, т.к. возможны проблемы: если на вход таймер0 подается F_CPU, на таймер1 F_CPU/1024, а в обработчике TIMER0_OVF происходит установка PSR10, то TIMER1 работать перестанет, т.к. каждые 256 тактов счетчик предделителя будет обнуляться, и значения F_CPU/1024 ни разу не достигнет.
*/
//Вектор при переполнении счетчика
ISR( TIMER0_OVF_vect ){
	
}

void t0_reset()
{
	TCNT0 = 0x00;
}

void t0_init(){
	//TCNT0=0x83; //выставляем начальное значение TCNT0
	//TCCR0|=(1<<CS00);//предделитель/1
	//TCCR0|=(1<<CS01);//предделитель/8
	//TCCR0|=(1<<CS01)|(1<<CS00);//предделитель/64
	//TCCR0|=(1<<CS02)|(1<<CS00);//предделитель/1024
	TCCR0|=(1<<CS02)|(1<<CS01);//внешний источник, по фронту
	TIMSK|=(1<<TOIE0);		// Разрешаем прерывание по переполнению Т0

	//SREG|=(1<<I);//глобальное разрешение прерывний
	// Global enable interrupts
	sei();
	t0_reset();
}
